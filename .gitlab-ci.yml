stages:
  - test
  - build
  - deploy

variables:
  DOCKER_HOST: "tcp://82.202.143.3:2377"
  DOCKER_TLS_VERIFY: "1"
  DOCKER_CERT_PATH: "/certs"
  CI_REGISTRY: "registry.gitlab.com"
  CI_IMAGE_NAME: "${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest"


test:
  stage: test
  image: gradle:8.4-jdk21
  script:
    - gradle --no-daemon test
  cache:
    paths:
      - .gradle
  artifacts:
    reports:
      junit: build/test-results/test/**/*.xml

build:
  stage: build
  image: docker:24.0
  services:
    - docker:24.0-dind
  before_script:
    - mkdir -p "$DOCKER_CERT_PATH"
    - echo "$DOCKER_CA_PEM" > "$DOCKER_CERT_PATH/ca.pem"
    - echo "$DOCKER_CERT_PEM" > "$DOCKER_CERT_PATH/cert.pem"
    - echo "$DOCKER_KEY_PEM" > "$DOCKER_CERT_PATH/key.pem"
    - chmod 600 "$DOCKER_CERT_PATH"/*
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_IMAGE_NAME" .
    - docker push "$CI_IMAGE_NAME"
  dependencies:
    - test
  only:
    - master
    - merge_requests

deploy:
  stage: deploy
  image: docker:24.0
  services:
    - docker:24.0-dind
  script:
    - echo "Deploying to Swarm..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker stack deploy --compose-file docker-compose.prod.yml homerep --with-registry-auth
  only:
    - master
  environment:
    name: production
    url: http://localhost:8083